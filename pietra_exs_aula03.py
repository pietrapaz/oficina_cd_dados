# -*- coding: utf-8 -*-
"""pietra_exs_aula03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ls8FmnXO_55m4L5UFEAvzT-WbyvtTvJL

# Importando o DataSet
"""

import pandas as pd
import seaborn as sns

# Carregar o DataFrame Titanic
df_titanic = sns.load_dataset('titanic')

"""> Como visto na aula anterior, uma das etapas mais importantes do **Pré-Processamento** é o que chamamos de **Imputação.**

> Nela, tratamos valores vazios e removemos dados indesejados.

- Agora, a partir do DataSet titânic, faça a imputação dos a dados a partir das exigências!

## Imputação

Decisões em cima dos dados vazios:
- **Média**
  - Desvio Padrão
- **Moda**
- **Mediana**
- **Remoção Total:** Remoção de todos os valores faltantes, importante para colunas inuteis.

Funções usadas:
- `.fillna()` : preenche os valores vazios com algum valor.
    - `.fillna(df['exemplo'].mean(), inplace=True)`
- `.replace()` : substitui um valor por outro.
    - `df['floor'].replace('-', np.nan)`
- `.dropna()` : remove linhas que contem valores vazios.
    - `dropna(subset=['exemplo'], inplace=True)`
- `drop()` : remove uma coluna.
    - `.drop(columns=['exemplo_1', 'exemplo_2', ..., 'exemplo_n'], inplace=True)`

obs: o uso do `inplace=True`, faz com que os dados alterados, sejam alterados no DataFrame príncipal.
"""

df_titanic.head()

df_titanic.shape

df_titanic.describe()

"""1. Imputação da coluna 'age' com a mediana"""

# mostrando valores ausentes antes da imputacao
print("Valores ausentes antes da imputação: ", df_titanic['age'].isnull().sum())

# printando a coluna 'age' para mostrar valores ausentes
print(df_titanic[['age']].tail(15))

# calculando a mediana
mediana_idade = df_titanic['age'].median()
print("Mediana da coluna 'age': ", mediana_idade)

# imputação dos valores ausentes
df_titanic['age'].fillna(mediana_idade, inplace=True)

#conferindo os valores ausentes
print("Valores ausentes apos imputacao: ", df_titanic['age'].isnull().sum())

# dataframe com os valores depois da imputação
print(df_titanic[['age']].tail(15))

"""2. Decisão de remover valores faltantes na coluna 'embark_town'"""

# printando valores da coluna 'embark_town'
print(df_titanic[['embark_town']].head())

# printando quantidade de valores faltantes da coluna 'embark_town'
print("quantidade de valores faltantes: ", df_titanic['embark_town'].isnull().sum())

# drop das linhas que possuem valores faltantes da coluna 'embark_town' e print para conferir os valores faltantes
df_titanic.dropna(subset=['embark_town'], inplace=True)

print("quantidade de valores faltantes: ", df_titanic['embark_town'].isnull().sum())

"""3. Remover colunas 'Alive', 'Class', 'embarked', 'deck', 'alive', 'adult_male' e 'embark_town'"""

# drop das colunas selecionadas
df_titanic.drop(columns=['alive', 'class', 'embarked', 'deck', 'adult_male', 'embark_town'], inplace=True)

# mostrando o dataframe apos retirada das colunas
df_titanic.head()

"""- A decisão de remover estas colunas, se da pelas redundancias delas.

Verificação
"""

# Verifique novamente os valores ausentes
df_titanic.isnull().sum()

# Me de o resumo do DataFrame
df_titanic.info()

df_titanic.shape

df_titanic.describe()

# Visualize novamente a cabeça do DataFrame
df_titanic.head()